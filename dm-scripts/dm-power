#!/usr/bin/env bash
declare -a options

if [[ $XDG_SESSION_TYPE == "x11" ]]; then
    LOCKER="$HOME/.config/i3lock/i3lock.sh"
elif [[ $XDG_SESSION_TYPE == "wayland" ]]; then
    LOCKER="swaylock"
fi

# use notify-send if run in dumb term
output="echo"
if [[ ${TERM} == 'dumb' ]]; then
    output="notify-send"
fi

yesno() {
    # shellcheck disable=SC2005
    echo "$(echo -e "No\nYes" | rofi -dmenu -i -p "${1}")"
}

declare -a managers=(
    "awesome"
    "bspwm"
    "dwm"
    "spectrwm"
    "xmonad"
    "qtile"
)

prompt="Shutdown menu"
declare -a options=(
    "Suspend"
    "Reboot"
    "Shutdown"
    "Logout"
    "Lock screen"
    "Disconnect Controllers"
    "Quit"
)

execute_choice() {
    if [[ $1 == 'lock' ]]; then ${LOCKER}
    elif [[ $1 == 'reboot' ]]; then systemctl reboot
    elif [[ $1 == 'poweroff' ]]; then systemctl poweroff
    elif [[ $1 == 'suspend' ]]; then systemctl suspend
    elif [[ $1 == 'controller' ]]; then ~/.local/bin/disconnect-controller.sh
    elif [[ $1 == 'quit' ]]; then ${output} "Program terminated." && exit 0
    else ${output} "Program terminated." && exit 0
    fi
}

[ ! $# -eq 0 ] && execute_choice $1 && exit

# Prompt the user
choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "${prompt}")

case $choice in
    'Logout')
        if [[ $(yesno "Logout?") == "Yes" ]]; then
            for manager in "${managers[@]}"; do
                killall "${manager}" || ${output} "Process ${manager} was not running."
            done
        else
            ${output} "User chose not to logout." && exit 1
        fi
        ;;
    'Lock screen') execute_choice lock ;;
    'Reboot')
        if [[ $(yesno "Reboot?") == "Yes" ]]; then
            execute_choice reboot
        else
            ${output} "User chose not to reboot." && exit 0
        fi
        ;;
    'Shutdown')
        if [[ $(yesno "Shutdown?") == "Yes" ]]; then
            execute_choice poweroff
        else
            ${output} "User chose not to shutdown." && exit 0
        fi
        ;;
    'Suspend')
        if [[ $(yesno "Suspend?") == "Yes" ]]; then
            execute_choice suspend
        else
            ${output} "User chose not to suspend." && exit 0
        fi
        ;;
    "Disconnect Controllers")
        ~/.local/bin/disconnect-controller.sh
        ;;
    'Quit') execute_choice quit ;;
    # It is a common practice to use the wildcard asterisk symbol (*) as a final
    # pattern to define the default case. This pattern will always match.
    *)
        exit 0
        ;;
esac
