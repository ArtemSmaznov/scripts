#!/usr/bin/env bash
# Tracking process
proc="/tmp/dm-record"

prompt="Record"
options=(
    "Monitor"
    "Area"
    "Window"
    "Desktop"
    "Camera"
    "Audio"
)

start_recording() {
    scope="$1"
    case "$scope" in
        "Monitor") ~/.local/bin/record-screen.sh monitor & echo $! > "$proc" ;;
        "Area") ~/.local/bin/record-screen.sh area & echo $! > "$proc" ;;
        "Window") ~/.local/bin/record-screen.sh window & echo $! > "$proc" ;;
        "Desktop") ~/.local/bin/record-screen.sh desktop & echo $! > "$proc" ;;
        "Camera") echo camera;; # TODO
        "Audio") echo audio_capture;; # REVIEW
        *) echo Invalid input;;
    esac
}

stop_recording() {
    pid="$(cat $proc)"

    # kill with SIGINT, allowing finishing touches.
    pkill -INT -P "$pid"
    rm -f "$proc"

    # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
    sleep 3
    pkill -TERM "$pid"
    exit
}

audio_capture() {
    ffmpeg \
        -f pulse -ac 2 -i $audio_device \
        -codec:a copy \
        $record_dir/dm-$(date $timestamp).wav &
    echo $! > $proc
}

if [ -f $proc ]; then
    if [ $(~/.local/bin/trigger-confirmation.sh "Stop recording?") = "Yes" ]; then
        stop_recording
    else
        exit
    fi

elif [ ! $# -eq 0 ]; then
    start_recording $1

else
    # Prompt the user
    choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "${prompt}")

    # Act on user selection
    [ $choice ] && start_recording $choice
fi
